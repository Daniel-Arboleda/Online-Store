"""
Django settings for Lucky project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path
# Para manejar variables de entorno en vez de claves secretas para la fase de pruebas {environ} esta libreria de django permite mejorar la seguridad durante esta fase del desarrollo

import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# Utilizar django-environ para establecer las variables de entorno
env = environ.Env()
# Leyendo el archivo .env
environ.Env.read_env(BASE_DIR / '.env')

SECRET_KEY = env('DJANGO_SECRET_KEY')
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DEBUG', default=True)  # Buen uso de un valor por defecto seguro
STRIPE_SECRET_KEY = env('STRIPE_SECRET_KEY')
PAYPAL_CLIENT_ID = env('PAYPAL_CLIENT_ID')
PAYPAL_CLIENT_SECRET = env('PAYPAL_CLIENT_SECRET')
PAYPAL_MODE = env('PAYPAL_MODE')
# SECURITY WARNING: keep the secret key used in production secret!
ALLOWED_HOSTS = ['*']
# Configuraciones de seguridad que solo se aplican cuando DEBUG es False
if not DEBUG:
    # Cookies
    SESSION_COOKIE_SECURE = True  # Las cookies de sesión solo se transmitirán a través de HTTPS.
    CSRF_COOKIE_SECURE = True  # Las cookies CSRF solo se transmitirán a través de HTTPS.

    # HTTP Headers
    SECURE_BROWSER_XSS_FILTER = True  # Activa el filtro XSS del navegador, que es una medida de protección extra.
    SECURE_CONTENT_TYPE_NOSNIFF = True  # Evita que los navegadores intenten adivinar (sniff) los MIME types, lo que puede tener implicaciones de seguridad.
    X_FRAME_OPTIONS = 'DENY'  # Protege contra clickjacking.

    # HSTS - Añade esta configuración si tu sitio va a servir exclusivamente a través de HTTPS.
    SECURE_HSTS_SECONDS = 31536000  # Establece la duración del HSTS en un año.
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True  # Aplica HSTS a todos los subdominios.
    SECURE_HSTS_PRELOAD = True  # Permite la pre-carga del sitio en listas de sitios que deben ser cargados solo a través de HTTPS.
# Configurar un buen sistema de registro (logging) puede ser crucial para el diagnóstico y monitoreo de la aplicación en producción
LOGGING_DIR = BASE_DIR / 'logs'
os.makedirs(LOGGING_DIR, exist_ok=True)  # Crea el directorio si no existe
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': LOGGING_DIR / 'debug.log',
        },
        'error_file': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': LOGGING_DIR / 'errors.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'error_file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'console': {
#             'level': 'DEBUG',
#             'class': 'logging.StreamHandler',
#         },
#         'file': {
#             'level': 'DEBUG',
#             'class': 'logging.FileHandler',
#             'filename': 'django_debug.log',
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['console', 'file'],
#             'level': 'DEBUG',
#             'propagate': True,
#         },
#     },
# }





# Para producción, es importante tener una configuración que maneje correctamente los archivos estáticos y de medios. Esto incluye definir STATIC_ROOT para la recolección de archivos estáticos y, si utilizas archivos de medios, configurar MEDIA_ROOT y MEDIA_URL.
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'staticfiles']  # Directorios de archivos estáticos para desarrollo

STATIC_ROOT = BASE_DIR / 'static'  # Directorio donde se recopilan los archivos estáticos para el despliegue

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'








# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/




# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Lucky'
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'Lucky.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],  # Directorio de plantillas
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Lucky.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'LuckyCart.db',
       
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


AUTH_USER_MODEL = 'Lucky.CustomUser' 



# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True



STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
